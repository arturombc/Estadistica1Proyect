---
title: "<span style='font-size:0.8em;'>Minería de Datos en la Industria de Telefonía Móvil: Análisis de clientes peruanos entre septiembre del 2018 y mayo del 2019</span>"
fontSize: 0.5
title-slide-attributes:
    data-background-image: telefono.jpg
    data-background-size: contain
    data-background-opacity: "0.5"
format:
  revealjs:
    transition: slide
    transition-speed: fast
    incremental: true 
    theme: blood
    scrollable: true
    smaller: true
author: "Grupo 4"
editor: visual
params:
  alpha: 0.1
  ratio: 0.1
---

```{r, liberías, message=FALSE}
if(!require(readr)){install.packages("readr");library(readr)}
if(!require(ggplot2)){install.packages("ggplot2");library(ggplot2)}
if(!require(ggthemes)){install.packages("ggthemes");library(ggthemes)}
if(!require(ggrepel)){install.packages("ggrepel");library(ggrepel)}
if(!require(forcats)){install.packages("forcats");library(forcats)}
if(!require(ggmosaic)){install.packages("ggmosaic");library(ggmosaic)}
if(!require(fitdistrplus)){install.packages("fitdistrplus");library(fitdistrplus)}
if(!require(tidyverse)){install.packages("tidyverse");library(tidyverse)}
if(!require(fastGraph)){install.packages("fastGraph");library(fastGraph)}
if(!require(dplyr)){install.packages("dplyr");library(dplyr)}
```

```{r}
DF <- read_csv("DataLimpia.csv"
               , col_types = cols(.default = col_guess()
                                  , CHIP=col_factor(levels = c("2G","3G","4G"))
                                  , PERIODO=col_date(format = "%Y%m")
                                  )
               )
```

## **Grafico de variable numerica continua e histograma:**

```{r histograma1, warning=FALSE}
xlim_min <- -1
xlim_max <- (quantile(DF$DATOS_4G, 0.75) + 1.5*IQR(DF$DATOS_4G, na.rm = TRUE))/1000

ggplot(DF, aes(DATOS_4G/1000)) +
  geom_histogram(aes(fill=..count..),binwidth = 0.5) +
  xlim(xlim_min,xlim_max) +
  xlab("Datos en GB") +
  ylab("Cantidad de usuarios") +
  scale_fill_gradient(low = "red", high = "yellow") +
  theme_solarized()
```

## Grafico de una variable categórica ordinal:

```{r}
ggplot(DF, aes(DF$PERIODO)) +
  geom_bar(color = "black", fill = "skyblue") +
  scale_x_date(date_breaks = "1 month", date_labels = "%b %Y") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = -90, hjust = 0, vjust = 1)) +
  ylab("Cantidad de registros") +
  xlab("Periodo") +
  labs(title = "Distribución de registros por período"
       )
```

## Grafico de variable categorica vs categorica:

```{r mosaic1,warning=FALSE}
ggplot(data = DF) +
  geom_mosaic(aes(x = product(OS), fill = CHIP)) +
  theme_mosaic() +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = -90, hjust = 0, vjust = 1)) +
  labs(title = "Tabla de Chip vs Sistema Operativo")
```

## **Gráfico de variable numérica vs numérica 1**

```{r}
DF %>%
  group_by(ID) %>%
  summarise(LLAMADAS_IN_TOTAL_PERIODOS=sum(LLAMADAS_IN_TOT,na.rm=TRUE),
            LLAMADAS_OUT_TOTAL_PERIODOS=sum(LLAMADAS_OUT_TOT,na.rm=TRUE)
            ) -> resultado_final
resultado_final %>%
  mutate(
    log_in = ifelse(LLAMADAS_IN_TOTAL_PERIODOS <= 1, NA,log(LLAMADAS_IN_TOTAL_PERIODOS + 1e-6)),
    log_out = ifelse(LLAMADAS_OUT_TOTAL_PERIODOS <= 1, NA, log(LLAMADAS_OUT_TOTAL_PERIODOS + 1e-6))
  ) %>%
  filter(!is.na(log_in) & !is.na(log_out) & !is.infinite(log_in) & !is.infinite(log_out)) %>%
  select(log_in, log_out) -> final
```
::: {.incremental}
:::: {.columns}

::: {.column width="50%" .fragment}
+ Antes
```{r, results='hide'}
ggplot(resultado_final, aes(x = LLAMADAS_IN_TOTAL_PERIODOS, fill = ..count..)) + 
  geom_histogram(binwidth = 1, color = "darkorange", show.legend = FALSE) +
  xlim(NA, 5000) + 
  scale_fill_gradient(low = "orange", high = "red") +
  labs(title = "Histograma de Llamadas Entrantes", x = "Llamadas Entrantes en 9 Meses", y = "Frecuencia") +
  theme_minimal()
```
:::

::: {.column width="50%" .fragment}
+ Antes
```{r, results='hide'}
ggplot(resultado_final, aes(x = LLAMADAS_OUT_TOTAL_PERIODOS, fill = ..count..)) + 
  geom_histogram(binwidth = 1, color = "blue", show.legend = FALSE) +
  scale_fill_gradient(low = "skyblue", high = "blue") +
  labs(title = "Histograma de Llamadas Salientes", x = "Llamadas Salientes en 9 Meses", y = "Frecuencia") +
  xlim(NA,5000) +
  theme_minimal()
```
:::

::::


::: {.columns}

::: {.column width="50%" .fragment}
+ ¿Distribución?
```{r, results='hide'}
descdist(resultado_final$LLAMADAS_IN_TOTAL_PERIODOS, boot = 1000, method = "sample")
```
:::

::: {.column width="50%" .fragment}
+ ¿Distribución?
```{r, results='hide'}
descdist(resultado_final$LLAMADAS_OUT_TOTAL_PERIODOS, boot = 1000, method = "sample")
```
:::

:::

::: {.columns}

::: {.column width="50%" .fragment}
+ Después
```{r}
ggplot(final, aes(x = log_out, fill = ..count..)) + 
  geom_histogram(binwidth = 0.35, color = "black", show.legend = FALSE) +
  scale_fill_gradient(low = "orange", high = "red") +
  labs(title = "Histograma de Llamadas Entrantes en Escala Logarítmica", x = "Llamadas Entrantes en 9 Meses", y = "Frecuencia") +
  theme_minimal()
```
:::

::: {.column width="50%" .fragment}
+ Después
```{r}
ggplot(final, aes(x = log_in, fill = ..count..)) + 
  geom_histogram(binwidth = 0.35, color = "black", show.legend = FALSE) +
  scale_fill_gradient(low = "skyblue", high = "blue") +
  labs(title = "Histograma de Llamadas Salientes en Escala Logarítmica", x = "Llamadas Salientes Totales en Periodos", y = "Frecuencia") +
  theme_minimal() 
```
:::

:::

:::

## **Gráfico de variable numérica vs numérica 2**

```{r}
ggplot(final,aes(log_in,log_out)) +
  geom_point(shape = 16, color = "purple") +
  geom_smooth(method = "lm", se = FALSE, color = "gold") +
  labs(x = "Cantidad de llamadas entrantes en total de 9 meses ", y = "Cantidad de llamadas salientes en total de 9 meses",
       title = "Llamadas entrantes vs salientes en escala log") + 
  scale_x_continuous(breaks = seq(floor(min(final$log_in)), ceiling(max(final$log_in)), by = 1)) +
  scale_y_continuous(breaks = seq(floor(min(final$log_out)), ceiling(max(final$log_out)), by = 1)) +
  theme_economist() 
```


```{r, results='hide'}
summary(DF$LLAMADAS_IN_TOT)
summary(DF$LLAMADAS_OUT_TOT)
```

```{r, results='hide'}
DF %>%   
  select(ID,LLAMADAS_IN_TOT) %>%   
  group_by(LLAMADAS_IN_TOT) %>%   
  summarise(n = n()) -> E_1 
```

```{r, results='hide'}
tail(E_1) 
E_1 
```

```{r, results='hide'}
E_1 <- E_1[-nrow(E_1), ] 
```

```{r, results='hide'}
Tot1 <- sum(E_1$n) 
E_1$P <- E_1$n / Tot1
```

```{r, results='hide'}
head(E_1)
```

```{r, results='hide'}
E_1 
sum(E_1$P)
```

```{r, results='hide'}
rename(E_1, "Eventos Atómicos" = LLAMADAS_IN_TOT, "Probabilidades atómicas" = P,"Frecuencia de repeticiones" = n) -> E_1_
head(E_1_)
```

```{r, results='hide'}
DF %>%   
  select(ID,LLAMADAS_OUT_TOT) %>%   
  group_by(LLAMADAS_OUT_TOT) %>%   
  summarise(n = n()) -> E_2
```

```{r, results='hide'}
E_2 <- E_2[-nrow(E_2), ]
```

```{r, results='hide'}
Tot2 <- sum(E_2$n) 
E_2$P <- E_2$n / Tot2
```

```{r, results='hide'}
head(E_2)
```

```{r, results='hide'}
E_2 
sum(E_2$P)
```

```{r, results='hide'}
rename(E_2, "Eventos Atómicos" = LLAMADAS_OUT_TOT, "Probabilidades atómicas" = P,"Frecuencia de repeticiones" = n) -> E_2_ 
head(E_2_)
```

```{r, results='hide'}
E_2
```

```{r, results='hide'}
P.E_1 <- sum(E_1$P[E_1$LLAMADAS_IN_TOT <= 50])
P.E_1
```

```{r, results='hide'}
P.E_2 <- sum(E_2$P[E_2$LLAMADAS_OUT_TOT <= 50])
P.E_2
```

```{r, results='hide'}
nrow(DF[DF$LLAMADAS_IN_TOT <= 50 & DF$LLAMADAS_OUT_TOT <= 50, ]) / nrow(DF) == P.E_1 * P.E_2
P.inter <- sum((DF$LLAMADAS_IN_TOT <= 50) & (DF$LLAMADAS_OUT_TOT <= 50), na.rm = TRUE)/sum(!is.na(DF$LLAMADAS_IN_TOT) & !is.na(DF$LLAMADAS_OUT_TOT))
P.E_1 * P.E_2
P.inter
```

```{r, results='hide'}
inte <- sum(DF$LLAMADAS_IN_TOT <= 50 & DF$LLAMADAS_OUT_TOT <= 50, na.rm = TRUE) / sum(!is.na(DF$LLAMADAS_IN_TOT) & !is.na(DF$LLAMADAS_OUT_TOT))
inte / P.E_2 == P.E_1
inte / P.E_2
P.E_1
```

```{r, results='hide'}
inte / P.E_1 == P.E_2
inte / P.E_1
P.E_2
```

## Variable discreta 1: {.smaller}

La variable: `DIAS_LLAMADAS_IN_TOT`

Definimos un experimento $\epsilon_1$ determinado por $\{\Omega_1, \mathcal{F}_1, \mathbb{P}_1\}$ como la cantidad de días del mes en los que recibes una llamada.

Al tratarse de eventos en un tiempo determinado, podemos intuir que se trata de una poisson.

**Elección del modelo**

```{r, results='hide'}
X_1 <- DF$DIAS_LLAMADAS_IN_TOT
X_1 <- X_1[!is.na(X_1)]
```

Definimos $\lambda$ como $\bar{X_1}$ que es igual a `r mean(X_1)`

Tomaremos este valor aún sabiendo que `r mean(X_1)` difiere de `r var(X_1)` considerablemente.

```{r, results='hide'}
l = mean(X_1)
```

Entonces $X_1 \sim \mathsf{Pois}(25.62425)$.

Podemos calcular su función de masa de probabilidad como.

$$
\mathbb{P}(\mathbb{X}_1 = x) = p(x) =   
\begin{cases} 
  \frac{\mathrm{e^{-\lambda}\lambda^x}}{x!}, & \forall~x > 0; \\
  0, & \text{en caso contrario}
\end{cases}
$$

```{r}
DF %>% 
  group_by(DIAS_LLAMADAS_IN_TOT) %>% 
  count() %>% 
  rename(Frecuencia = n) -> probDias
probDias <- probDias[-nrow(probDias), ]
probDias$P <- probDias$Frecuencia / sum(probDias$Frecuencia)
#sum(probDias$P)
```

::: {.fragment}
```{r}
plot(probDias$DIAS_LLAMADAS_IN_TOT 
     ,  probDias$P
     , type = "h", col="red", main = "Comparación de la variable 'DIAS_LLAMADAS_IN_TOT' y X_3", xlab = "Cantidad de días de llamadas", ylab = "Probabilidad"
     #, ylim = c(0,0.2) 
     )

points(probDias$DIAS_LLAMADAS_IN_TOT,  probDias$P,pch = 20, col="red")

lines(dpois(0:31, l), col="blue", type="l", lwd = 2, lty = 2)

legend("topleft", legend = c("Función de probabilidad", "Distribución de Poisson"), col = c("red", "blue"), lwd = 2, lty = c(1,2) )
```


:::

::: {.fragment}

```{r}
probAcumulada <- ecdf(probDias$DIAS_LLAMADAS_IN_TOT)

ecdf_datos <- probAcumulada(-5:36)

plot(ecdf_datos, 
     main = "Función de masa de probabilidad acumulada", 
     xlab = "Cantidad de días que recibió llamadas", 
     ylab = "Probabilidad acumulada",
     type = "s",
     col = "blue"
)
```
:::

## Variable continua 3: {.smaller}

La variable: `TIEMPO_LLAMADAS_IN_TOT`

Definimos un experimento $\epsilon_2$ determinado por $\{\Omega_2, \mathcal{F}_2, \mathbb{P}_2\}$ como la cantidad de minutos que pasas en una llamada entrante en el mes.

**Elección del modelo**

```{r}
x <-DF$TIEMPO_LLAMADAS_IN_TOT 
x <- x[!is.na(x)] 
x <- x[x > 1] 
```

:::: {.columns}

::: {.column width="50%" .fragment}

+ ¿A qué distribución se parece?
```{r}
ggplot(data.frame(x), aes(x = x, fill = ..count..)) + 
  geom_histogram(color = "black", show.legend = FALSE) +
  scale_fill_gradient(low = "green", high = "darkgreen") +
  labs(title = "Histograma de Llamadas Salientes", x = "Tiempo total de las llamadas que recibes al mes", y = "Frecuencia") +
  theme_minimal()
```
:::

::: {.column width="50%" .fragment}
+ Se decidió tomar el modelo *log normal*.
```{r, results='hide'}
descdist(x) # fitdistplus
```
:::

::::

```{r}
Z_3 <- log(x)
```

+ Para verificar que esto cumple, podemos mirar la centralidad.

$$\mu = 5.46865 \quad \text{mediana} = 5.571279$$

```{r, results='hide'}
m <- median(Z_3) 
s <- sd(Z_3)
```


::: {.fragment}
```{r}
ggplot(data.frame(Z_3), aes(x = Z_3)) +
  geom_histogram(aes(y = ..density..), binwidth = diff(range(Z_3))/50, color = "black", fill = "#B8FFB8") +
  stat_function(fun = dnorm, args = list(mean = m, sd = s), color = "darkgreen", linewidth = 1) +
  xlab("Tiempo total de llamadas que recibes al mes (log)") +
  ylab("Densidad") +
  theme_minimal()
```

:::
Para el calculo de la esperanza y varianza, como nuestra distribución se distribuye normal con parámetros `m` y `s` :

$$X_2\sim \mathsf{Norm}(5.571279,1.015403)$$

La esperanza y la varianza serían:

```{r}
Esperanza_X <- m 
Varianza_X <- s^2 
#sprintf("E(X_3) =  %f",Esperanza_X) 
#sprintf("Var(X_3) = %f",Varianza_X)
```

$$E(X_2) =5.46865 \quad Var(X_2) = 1.031042$$


Al escoger a un usuario de manera aleatoria, se esperaría que el tiempo de llamada sea aproximadamente 237,14 minutos durante el mes ($e^{E(x)}$).

Ya que tenemos un modelo, podemos calcular probabilidades.

¿Cuál es la probabilidad de que al escoger un usuario de manera aleatoria, haya llamado menos de 420 minutos al mes (6h y 30m)?

Podemos calcular eso usando la función `pnorm` y el parámetro a calcular tendrá que pasarse en `log` debido a la transformación que fue hecha.

```{r}
pnorm(log(420),m,s)
```

También se puede ver gráficamente.

```{r}
shadeDist(log(420),"dnorm",m,s)
```

## Variable 4 {.smaller}

La variable: `DATOS_4G`

Definimos un experimento $\epsilon_3$ determinado por $\{\Omega_3, \mathcal{F}_3, \mathbb{P}_3\}$ como la cantidad de datos 4G que un usuario utiliza durante un mes.

**Elección de modelo**

```{r, fig.width=9, fig.height=4.5, fig.align='center'}
datos_4g <- DF$DATOS_4G
hist(DF$DATOS_4G, col = colorRampPalette(c("darkred", "red"))(15), main = "Histograma de datos 4G por mes")
#descdist(datos_4g)
```

```{r}
datos_4g <- datos_4g[datos_4g!=0]
datos_4g <- datos_4g[!is.na(datos_4g)]
datos_4g <- datos_4g[datos_4g > 1]
datos_4g2 <- ((datos_4g - min(datos_4g)) / (max(datos_4g)-min(datos_4g)))
#fitdist(datos_4g2,"beta")
#fitdist(datos_4g,"gamma")
#fitdist(datos_4g,"lnorm")
```

Se decidió tomar el modelo *log normal*

**Cálculo de parámetros**

```{r}
Z <- log(datos_4g)
```

```{r}
#fitdist(Z,"norm")
```

```{r}
m <- mean(Z)
s <- sd(Z)
s;m
```

**Gráfico de verificación**

```{r, fig.width=9, fig.height=4, fig.align='center'}
hist(Z,breaks = 50 , prob = TRUE)
curve(dnorm(x, mean = m, sd = s), add = TRUE, col = "red", lwd = 2)
```

**Cálculo de la esperanza y varianza**

```{r}
Esperanza_X <- m
Varianza_X <- s^2
sprintf("E(X_4) =  %f",Esperanza_X)
sprintf("Var(X_4) = %f",Varianza_X)
```

**Cálculo de probabilidades**

¿Cuál es la probabilidad de que alguien gaste menos de 10Gbi en datos al mes(10000Mbi)?

```{r, results='hide'}
pnorm(log(10000),m,s)
```

```{r, fig.align='center'}
shadeDist(log(10000),"dnorm",m,s)
```

## Conclusiones: {.smaller}

::: columns
::: {.column width="50%"}
-   La mayoría de usuarios no usan internet móvil.
-   Si usas internet, consumes aproximadamente 7GB al mes.
-   Llamas más de lo que te llaman.
-   Hay una correlación fuerte entre las llamadas que haces y recibes.
-   Probablemente seas Android.
-   Probablemente usas Samsung.
-   Tus llamadas duran menos de dos minutos aproximadamente.
-   Llamas y recibes mas llamadas durante los dias laborables.
:::

::: {.column width="50%"}
-   El estudio muestra una correlación entre recibir menos de 50 llamadas al mes y que realices llamadas menos de 50 veces al mes.
-   Al escoger a un usuario de manera aleatoria, se esperaría que haya gastado 5361.5Mbi o 5.361Gbi de datos 4G durante el mes.
-   Al escoger a un usuario de manera aleatoria, se esperaría que haya llamado aproximadamente 237,14 minutos durante el mes.
-   Hay un 1% de probabilidad de que te llamen 15 días o menos durante el mes.
:::
:::
